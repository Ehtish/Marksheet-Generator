<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOySURBVGhD7ZpJaxRRFIUTdxLMb1BxNjFCVMzGCU1w1kVjhk4WAf+C4K4RxGEt/gLFLMQQJwQ3
        IuJCBEFUENyZxLStSUSJ0YX6nc6rULy8qq6qrh4MfeBQw7v33Hvfe1WvqrqbGmigzjEwMNAKj8Gr8GE2
        m/3AdtpPnYMP2L/C9ujw8PAq415b5HK5Ff39/SfhKMn9gn/jEL95tnco6oS0jGx1QQJn4FsvqRT4hsIy
        Rr7yINhagj62kkiTjwYHB9eYcJUBQc7COV/QSvE7zJqwqaKZkbhgBas4uXZyJn46QPC6K1CVeM2kUR4Q
        umQJV53MhosmnWTQXcQlXAP+gadNWvHAdFqH8zefWK05m+Ru1ozjU0uo5qRznyi3hRQjoI6m1BJSzCmT
        ZkloNF7bAnXEV8pxIdUQMBpHHM6BxH4XvdQBP7vaSzAvX7a7rfOhJGaPSTcYGN12OQcR+075cSG2cZy3
        20OY7+vr22p8dzjawzgiv0Bg0EpieiJ1OQfRn1DUYqYS+Pg5h1+L/J3AQO8TLsdSnPFGhu16jsetdj/H
        ZSNbMxIzVntUHpaGE8zXyw6HqJwisc3SUW/r2Gov2sAtstHWHNs2kUhnBK/2GNy3HWKyANul5RiZj95I
        sO3kWG+Nft+4HJOWEwR473CIy0lGZJP02Pd6/ZNvtDbpGLp84/Cd9Jyg8atlnJSTTNON0lQBXhE6pzbL
        NhF1u5emExjEfu8OogJRQJuRLt6ddM5lm4TMnnkjvRQY/LYdymCBxDuMtKbtds59sWwSs1QhaU2txSKs
        qaVVXDcEl09cFqTpREoXe4ELepv02F9ysadYTPDFTpC7Doc4nEDDu8i12PlvsdN0VHHRlI1sfW2xidao
        tJwgQOIFEV9dyMU1JMqCqFEzPrZNJFJI6ILYbTtE5MTQ0NAGaZiRCHvsmJaNbMsZGTQOSMMJGlswivvd
        Ko9f8TarrY6tdhcXHxrZb08wMj8ymcxK+QcCoxHLKZRe78YowuPiUzP7O622UFL4DfmFgrkX68UK0X0k
        1JVwvquYLmLud7SFsdukGw4MX1qO9cQXJs3SoIeWxceHInC6Z4vUAYMf3YNA5cviA10RdTTFkn8y9YDA
        eZ9grXjOpFMemGb//88KBsvjhx4PLF7HCZDWO0sYp+i4gyZsZUAA/RhayVvzWG9v72oTrvKgoB6CPreS
        KIfPmEqHjHz1wXTbSwK3KCzup1bxJ7yJ7x4jV3uQkOsvHLPQS3pW52D9/YWjgQaC0NT0D/ie/o/2b0FV
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>